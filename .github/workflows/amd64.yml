name: x86-64 拉取并保存 Docker 镜像
on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称 多个用英文逗号分开'
        required: true
        default: 'alpine:latest'  # 设置默认的 Docker 镜像列表

jobs:
  pull_and_package:
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码库
      uses: actions/checkout@v4

    - name: 清理 Docker 释放空间
      run: |
          docker system prune -a -f
          docker volume prune -f

    - name: 拉取 Docker 镜像并保存
      run: |
        # 生成东八区(+8)时间戳格式 yyyy-mm-dd-HH-MM-SS
        TIMESTAMP=$(TZ='Asia/Shanghai' date +"%Y-%m-%d-%H-%M-%S")
        echo "TIMESTAMP=${TIMESTAMP}" >> $GITHUB_ENV
        
        # 创建文件夹名称: docker-images-时间戳
        FOLDER_NAME="docker-images-${TIMESTAMP}"
        echo "FOLDER_NAME=${FOLDER_NAME}" >> $GITHUB_ENV
        
        mkdir -p ${FOLDER_NAME}
        images="${{ github.event.inputs.docker_images }}"
        IFS=',' read -r -a image_array <<< "$images"
        
        # 创建镜像列表文件
        touch ${FOLDER_NAME}/image-list.txt
        
        for image in "${image_array[@]}"; do
          echo "正在拉取并保存: ${image}"
          # 使用简化的镜像名作为文件名
          safe_name=$(echo "${image}" | tr '/:' '_-')
          
          # 直接保存镜像到tar文件
          docker pull "${image}" --platform "linux/amd64"
          docker save "${image}" -o "${FOLDER_NAME}/${safe_name}-amd64.tar"
          
          # 记录镜像名到清单文件
          echo "${image}" >> ${FOLDER_NAME}/image-list.txt
        done

    - name: 上传制品
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.FOLDER_NAME }}
        path: ${{ env.FOLDER_NAME }}/
        retention-days: 1  # 将保留天数设置为 1 天 最多可设置90天
        
    - name: 清理文件
      run: |
        rm -rf ${{ env.FOLDER_NAME }}/
        docker system prune -a -f
